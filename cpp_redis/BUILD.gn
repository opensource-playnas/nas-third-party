config("impl_config"){
    include_dirs=[
      "includes",
      ]
}
source_set("cpp_redis") {
  public_configs = [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "sources/builders/array_builder.cpp",
    "sources/builders/builders_factory.cpp",
    "sources/builders/bulk_string_builder.cpp",
    "sources/builders/error_builder.cpp",
    "sources/builders/integer_builder.cpp",
    "sources/builders/reply_builder.cpp",
    "sources/builders/simple_string_builder.cpp",
    "sources/core/client.cpp",
    "sources/core/consumer.cpp",
    "sources/core/reply.cpp",
    "sources/core/sentinel.cpp",
    "sources/core/subscriber.cpp",
    "sources/core/types.cpp",
    "sources/misc/dispatch_queue.cpp",
    "sources/misc/logger.cpp",
    "sources/network/redis_connection.cpp",
    "sources/network/tcp_client.cpp",
  ]
  deps = [
    "tacopie:tacopie",
  ]
}


executable("example_cpp_redis_subscriber"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "examples/cpp_redis_subscriber.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}


executable("example_cpp_redis_kill"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "examples/cpp_redis_kill.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}


executable("example_cpp_redis_client"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "examples/cpp_redis_client.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}


executable("example_cpp_redis_logger"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "examples/cpp_redis_logger.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}


executable("example_cpp_redis_future_client"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "examples/cpp_redis_future_client.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}

executable("example_cpp_redis_high_availability_client"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "examples/cpp_redis_high_availability_client.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}

executable("example_cpp_redis_streams_client"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "examples/cpp_redis_streams_client.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}


# Note: These tests should be broken up more - each file should have its own
# call to RUN_ALL_TESTS.
# For example, the number of individual cases in all files in srcs is 62. If
# the shard count is set to 62, bazel tells us "Having more than 50 shards is
# indicative of poor test organization. Please reduce the number of shards."
# Note 2: Some tests require exclusive access to a redis server running at the
# default port.  Therefor we can only run 1 test at a time.

executable("test_cpp_redis"){
  configs += [ ":impl_config","tacopie:impl_config"]
  configs += [ "//build/config/compiler:exceptions" ]
  sources = [
    "tests/sources/main.cpp",
    "tests/sources/spec/builders/array_builder_spec.cpp",
    "tests/sources/spec/builders/builders_factory_spec.cpp",
    "tests/sources/spec/builders/bulk_string_builder_spec.cpp",
    "tests/sources/spec/builders/error_builder_spec.cpp",
    "tests/sources/spec/builders/integer_builder_spec.cpp",
    "tests/sources/spec/builders/reply_builder_spec.cpp",
    "tests/sources/spec/builders/simple_string_builder_spec.cpp",
    "tests/sources/spec/redis_client_spec.cpp",
    "tests/sources/spec/redis_subscriber_spec.cpp",
    "tests/sources/spec/reply_spec.cpp",
    ]
    # TODO (steple): For windows, link ws2_32 instead.
    #linkopts = ["-lpthread"],
    
  deps = [
    ":cpp_redis",
  ]
}




group("cpp_redis_group") {
  deps = [
    ":example_cpp_redis_subscriber",
    ":example_cpp_redis_kill",
    ":example_cpp_redis_client",
    ":example_cpp_redis_logger",
    ":example_cpp_redis_future_client",
    ":example_cpp_redis_high_availability_client",
    ":example_cpp_redis_streams_client",
  ]
}